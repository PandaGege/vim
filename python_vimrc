set nocompatible              " be iMproved, required
filetype off                  " required

" python pep8风格
au BufNewFile,BufRead *.py
    \ set tabstop=4     |
    \ set softtabstop=4 |
    \ set shiftwidth=4  |
    \ set textwidth=79  |
    \ set expandtab     |
    \ set autoindent    |
    \ set fileformat=unix

autocmd FileType python set omnifunc=pythoncomplete#Complete

"折叠
set foldmethod=indent
set foldlevel=99
" Enable folding with the spacebar
nnoremap <space> za


"set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.
" plugin on GitHub repo
" Plugin 'tpope/vim-fugitive'
"" let Vundle manage Vundle, required
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
"折叠
Plugin 'tmhedberg/SimpylFold'
""文件树
Plugin 'scrooloose/nerdtree'
"缩进对齐
Plugin 'Yggdroot/indentLine'
"pep8 F7检查
Plugin 'nvie/vim-flake8'


" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line



set laststatus=2  "显示状态栏
"set showtabline=2
"set noshowmode
set t_Co=256    "在windows中用xshell连接打开vim可以显示色彩
"
"airline
""安装字体后必须设置
"let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1
" tabline中当前buffer两端的分隔字符
let g:airline#extensions#tabline#left_sep = ' '
" tabline中未激活buffer两端的分隔字符
let g:airline#extensions#tabline#left_alt_sep = '|'
" tabline中buffer显示编号
let g:airline#extensions#tabline#buffer_nr_show = 1
"let g:airline#extensions#tabline#formatter = 'default'

if !exists('g:airline_symbols')
  let g:airline_symbols = {}
endif

" old vim-powerline symbols
let g:airline_left_sep = '⮀'
let g:airline_left_alt_sep = '⮁'
let g:airline_right_sep = '⮂'
let g:airline_right_alt_sep = '⮃'
let g:airline_symbols.linenr = '¶'
let g:airline_symbols.maxlinenr = ''
let g:airline_symbols.branch = '⭠'
let g:airline_symbols.readonly = '⭤'
let g:airline_symbols.whitespace = 'Ξ'
let g:airline_symbols.paste = 'ρ'
"let g:airline_symbols.maxlinenr = '㏑'
"

"let g:airline_theme='bubblegum'
"let g:airline_theme='dark'
let g:airline_theme='deus'



"显示折叠后的方法说明
let g:SimpylFold_docstring_preview=1

"
let NERDTreeIgnore=['\~$', '\.pyc$', '\.swp$']


"用fj替换esc键
inoremap fj <ESC>

" 简化窗口切换指令
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" 打开新窗口后自动切换到新窗口
set splitbelow
set splitright


"快捷键文件树
map <F2> :NERDTreeToggle<CR>


"背景dark
set bg=dark


"将键盘上的F4功能键映射为添加作者信息的快捷键
map <F4> ms:call TitleDet()<cr>'s
function AddTitle()
        call append(0,"# coding: utf-8")
        call append(1,"# ----------------------------------------------")
        call append(2,"# author            : regan")
        call append(3,"# email             : x-regan@qq.com")
        call append(4,"# create at         : ".strftime("%Y-%m-%d %H:%M"))
        call append(5,"# last modify       : ".strftime("%Y-%m-%d %H:%M"))
        call append(6,"# ----------------------------------------------")
        call append(7,"")
        echohl WarningMsg | echo "Successful in adding the copyright." | echohl None
endf

"更新最近修改时间和文件名
function UpdateTitle()
        normal m'
        execute '/# last modify\s*:/s@:.*$@\=strftime(": %Y-%m-%d %H:%M")@'
        normal "
        normal m
        echohl WarningMsg | echo "Successful in updating the copy right."| echohl None
endfunction

"判断前10行代码里面，是否有Last modified这个单词，
"如果没有的话，代表没有添加过作者信息，需要新添加；
"如果有的话，那么只需要更新即可
function TitleDet()
        let n=1
        while n < 8
                let line = getline(n)
                if line =~'^\#\s*\S*last\smodify\S*.*$'
                        call UpdateTitle()
                        return
                endif
                let n = n + 1
        endwhile
        call AddTitle()
endfunction

